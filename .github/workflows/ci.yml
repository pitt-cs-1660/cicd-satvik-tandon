on:
  push:
    branches:
      - "**"

  workflow_dispatch:
    inputs:
      debug:
        description: "Debug jobs"
        required: false
        type: string
        default: "false"

jobs:
  docker-check:
    # if: github.event.inputs.debug == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Docker compose config
        run: docker compose config
      - name: Verify Dockerfile
        run: |
          DOCKERFILE=Dockerfile
          if [[ ! -f "$DOCKERFILE" ]]; then
            echo "❌ Dockerfile not found!"
            exit 1
          fi

          # Check number of stages
          STAGE_COUNT=$(grep -c '^FROM' "$DOCKERFILE")
          echo "✅ Found $STAGE_COUNT stages in the Dockerfile."
          if [[ $STAGE_COUNT -lt 2 ]]; then
            echo "❌ Dockerfile must have at least 2 stages (multi-stage build required)."
            exit 1
          fi

          # Check base image
          if ! grep -q '^FROM python:3.11-buster' "$DOCKERFILE"; then
            echo "❌ Base image is not 'python:3.11-buster'"
            exit 1
          else
            echo "✅ Base image is 'python:3.11-buster'"
          fi

          # Check WORKDIR
          if ! grep -q '^WORKDIR /app' "$DOCKERFILE"; then
            echo "❌ WORKDIR is not set to '/app'"
            exit 1
          else
            echo "✅ WORKDIR is set to '/app'"
          fi

  integration-test:
    # if: github.event.inputs.debug == 'false'
    timeout-minutes: 10
    name: integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Docker compose up
        run: docker compose up -d --wait
      - name: Integration tests
        run: |
          ./tests/api_tests.sh
      - name: Docker compose down
        run: docker compose down

  deploy:
    # if: github.event.inputs.debug == 'true'
    runs-on: ubuntu-22.04
    permissions:
      contents: "read"
      id-token: "write"
    needs:
      - integration-test
    steps:
      # checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # authenticate with GCP with workload identity provider
      - uses: "google-github-actions/auth@v2"
        id: auth
        name: Authenticate to GCP
        with:
          project_id: "spring-2025-cc" # update with your project ID
          workload_identity_provider: "projects/785993937496/locations/global/workloadIdentityPools/github/providers/my-repo" # update with your Workload Identity Pool

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: "spring-2025-cc"

      # configure/login with docker
      - name: gcloud Configure Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      # setup docker buildx
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      # build and push the image
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: us-central1-docker.pkg.dev/spring-2025-cc/satvik-repo/app:v3 